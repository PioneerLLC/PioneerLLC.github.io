{"version":3,"sources":["webpack:///./src/templates/contact.js"],"names":["Contact","render","this","props","site","pageContext","page","image","id","className","htmlToReact","name","action","method","data-netlify","data-netlify-honeypot","type","value","field","field_idx","key","React","Component"],"mappings":"qRASqBA,E,kGACjBC,OAAA,WAAU,IAAD,OACL,OACI,kBAAC,IAAWC,KAAKC,MACf,kBAAC,IAAD,iBAAYD,KAAKC,MAAjB,CAAwBC,KAAMF,KAAKC,MAAME,YAAYD,KAAME,KAAMJ,KAAKC,MAAME,YAAaE,MAAO,IAAML,KAAKC,MAAO,uCAClH,yBAAKK,GAAG,UAAUC,UAAU,gBAC1B,0BAAMD,GAAG,OAAOC,UAAU,mBACxB,6BAASA,UAAU,uBACjB,4BAAQA,UAAU,eAChB,wBAAIA,UAAU,cAAc,IAAMP,KAAKC,MAAO,mCAE/C,IAAMD,KAAKC,MAAO,qCACnB,yBAAKM,UAAU,iBACZC,YAAY,IAAMR,KAAKC,MAAO,sCAGjC,yBAAKM,UAAU,gBACZC,YAAY,IAAMR,KAAKC,MAAO,qBAC/B,wCAAMQ,KAAM,IAAMT,KAAKC,MAAO,mCAAoCK,GAAI,IAAMN,KAAKC,MAAO,oCAAyC,IAAMD,KAAKC,MAAO,uCAAyC,CAACS,OAAQ,IAAMV,KAAKC,MAAO,wCAA0C,KAAjQ,CAAuQU,OAAO,OAAOC,eAAa,OAAOC,wBAAsB,cAC7T,yBAAKN,UAAU,sBACb,uEAA4C,2BAAOE,KAAK,gBAE1D,2BAAOK,KAAK,SAASL,KAAK,YAAYM,MAAO,IAAMf,KAAKC,MAAO,qCAC9D,IAAM,IAAMD,KAAKC,MAAO,wCAAwC,SAACe,EAAOC,GAAR,OAC/D,kBAAC,IAAD,eAAWC,IAAKD,GAAe,EAAKhB,MAApC,CAA2Ce,MAAOA,QAEpD,yBAAKT,UAAU,eACb,4BAAQO,KAAK,SAASP,UAAU,UAAU,IAAMP,KAAKC,MAAO,8CAMtE,kBAAC,IAAD,iBAAYD,KAAKC,MAAjB,CAAwBC,KAAMF,KAAKC,MAAME,YAAYD,KAAME,KAAMJ,KAAKC,MAAME,YAAaE,MAAO,IAAML,KAAKC,MAAO,0C,GAjC7FkB,IAAMC","file":"component---src-templates-contact-js-fd92406ec681f63db708.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\nimport {Layout} from '../components/index';\nimport Header from '../components/Header';\nimport {htmlToReact} from '../utils';\nimport FormField from '../components/FormField';\nimport Footer from '../components/Footer';\n\nexport default class Contact extends React.Component {\n    render() {\n        return (\n            <Layout {...this.props}>\n              <Header {...this.props} site={this.props.pageContext.site} page={this.props.pageContext} image={_.get(this.props, 'pageContext.frontmatter.img_path')} />\n              <div id=\"content\" className=\"site-content\">\n                <main id=\"main\" className=\"site-main inner\">\n                  <article className=\"post page post-full\">\n                    <header className=\"post-header\">\n                      <h1 className=\"post-title\">{_.get(this.props, 'pageContext.frontmatter.title')}</h1>\n                    </header>\n                    {_.get(this.props, 'pageContext.frontmatter.subtitle') && \n                    <div className=\"post-subtitle\">\n                      {htmlToReact(_.get(this.props, 'pageContext.frontmatter.subtitle'))}\n                    </div>\n                    }\n                    <div className=\"post-content\">\n                      {htmlToReact(_.get(this.props, 'pageContext.html'))}\n                      <form name={_.get(this.props, 'pageContext.frontmatter.form_id')} id={_.get(this.props, 'pageContext.frontmatter.form_id')} {...(_.get(this.props, 'pageContext.frontmatter.form_action') ? {action: _.get(this.props, 'pageContext.frontmatter.form_action')} : null)}method=\"POST\" data-netlify=\"true\" data-netlify-honeypot=\"bot-field\">\n                        <div className=\"screen-reader-text\">\n                          <label>Don't fill this out if you're human: <input name=\"bot-field\" /></label>\n                        </div>\n                        <input type=\"hidden\" name=\"form-name\" value={_.get(this.props, 'pageContext.frontmatter.form_id')} />\n                        {_.map(_.get(this.props, 'pageContext.frontmatter.form_fields'), (field, field_idx) => (\n                          <FormField key={field_idx} {...this.props} field={field} />\n                        ))}\n                        <div className=\"form-submit\">\n                          <button type=\"submit\" className=\"button\">{_.get(this.props, 'pageContext.frontmatter.submit_label')}</button>\n                        </div>\n                      </form>\n                    </div>\n                  </article>\n                </main>\n                <Footer {...this.props} site={this.props.pageContext.site} page={this.props.pageContext} image={_.get(this.props, 'pageContext.frontmatter.img_path')} />\n              </div>\n            </Layout>\n        );\n    }\n}\n"],"sourceRoot":""}